version: '3.9'

services:
  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: orders_user
      POSTGRES_PASSWORD: orders_pass
      POSTGRES_DB: orders
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U orders_user -d orders"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  orders:
    build:
      context: ./OrdersService
    container_name: orders
    ports:
      - "8001:8001"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql+asyncpg://orders_user:orders_pass@postgres:5432/orders
      RABBITMQ_URL: amqp://guest:guest@rabbitmq/
      PYTHONUNBUFFERED: 1

  api-gateway:
    build:
      context: ./ApiGateway
    container_name: api-gateway
    ports:
      - "8000:8000"
    depends_on:
      - orders
    environment:
      PYTHONUNBUFFERED: 1

# ðŸ”’ payments Ð²Ñ€ÐµÐ¼ÐµÐ½Ð½Ð¾ Ð¾Ñ‚ÐºÐ»ÑŽÑ‡Ñ‘Ð½
#  payments:
#    build:
#      context: ./PaymentsService
#    container_name: payments
#    ports:
#      - "8002:8002"
#    depends_on:
#      postgres:
#        condition: service_healthy
#      rabbitmq:
#        condition: service_healthy
#    environment:
#      DATABASE_URL: postgresql+asyncpg://orders_user:orders_pass@postgres:5432/orders
#      RABBITMQ_URL: amqp://guest:guest@rabbitmq/
#      PYTHONUNBUFFERED: 1

volumes:
  postgres_data:
